# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build_SecureImage
  displayName: 'Build'
  jobs:
  - job: Foo
    steps:
      - script: |
          echo "This is job Foo."
          echo "##vso[task.setvariable variable=doThing;isOutput=true]aws" #The variable doThing is set to aws
        name: DetermineResult
  - job: aws
    dependsOn: Foo
    condition: eq(dependencies.Foo.outputs['DetermineResult.doThing'], 'aws') #map doThing and check if true
    steps:
      - script: echo "Job aws ran and doThing is aws."
  - job: azure
    dependsOn: Foo
    condition: eq(dependencies.Foo.outputs['DetermineResult.doThing'], 'azure') #map doThing and check if true
    steps:
      - script: echo "Job azure ran and doThing is azure."

- stage: Build_SecureImage2
  displayName: 'Build2'
  jobs:
  - job: Install
    steps:
      - script: |
          echo "apt-get update"
          sudo apt-get update
          echo "##vso[task.setvariable variable=doThing2;isOutput=true]azure"
        name: DetermineResult2
  - job: aws
    dependsOn: Install
    condition: eq(dependencies.Install.outputs['DetermineResult2.doThing2'], 'aws') 
    steps:
      - script: echo "Job aws ran and doThing is aws."
  - job: azure
    dependsOn: Install
    condition: eq(dependencies.Install.outputs['DetermineResult2.doThing2'], 'azure') 
    steps:
      - script: echo "Job azure ran and doThing is azure."